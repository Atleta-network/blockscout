name: Deploy

on:
  workflow_dispatch:

jobs:
  build:
    environment: testnet_v2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Checkout blockscout-frontend repository
        uses: actions/checkout@v4
        with:
          repository: Atleta-network/blockscout-frontend
          ref: develop
          path: blockscout-frontend

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.CI_REGISTRY }}
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Build and push explorer-frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./blockscout-frontend
          push: true
          no-cache: true
          tags: |
            ${{ secrets.CI_REGISTRY }}/${{ secrets.CI_REGISTRY_REPO }}/blockscout-frontend:${{ github.sha }}
            ${{ secrets.CI_REGISTRY }}/${{ secrets.CI_REGISTRY_REPO }}/blockscout-frontend:latest
          build-args: |
            GIT_COMMIT_SHA=${{ github.sha }}
            GIT_TAG=develop

      - name: Install system dependencies
        run: |
          sudo apt-get install gettext  
        
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          touch ~/.ssh/known_hosts
          ssh-keyscan ${{ secrets.HOST_1 }} >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent)

      - name: Fill common-frontend.env
        env:
          NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID }}
        run: |
            cd docker-compose/envs
            envsubst < common-frontend.env > common-frontend_fill.env
            mv common-frontend_fill.env common-frontend.env

      - name: Fill verification key
        run: |
            cd docker-compose/services
            mkdir .well-known
            echo ${{ secrets.WALLETCONNECT}} > ./.well-known/walletconnect.txt

      - name: Fill common-frontend.env
        env:
          CI_REGISTRY: ${{ secrets.CI_REGISTRY }}
          CI_REGISTRY_REPO: ${{ secrets.CI_REGISTRY_REPO }}
          SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
          SERVICE_TAG: ${{ github.sha }}
        run: |
            cd docker-compose/services
            envsubst < frontend.yml > frontend_fill.yml
            mv frontend_fill.yml frontend.yml

      - name: Copy Files to Server
        run: |
          scp -r docker-compose/* ${{ secrets.HOST_1_USERNAME}}@${{ secrets.HOST_1 }}:${{ secrets.BASE_PATH }}

      - name: Deploy
        uses: appleboy/ssh-action@v1.0.0
        env:
          CI_REGISTRY: ${{ secrets.CI_REGISTRY }}
          CI_REGISTRY_REPO: ${{ secrets.CI_REGISTRY_REPO }}
          SERVICE_NAME: blockscout-frontend
          SERVICE_TAG: ${{ github.sha }}
          DOCKER_COMPOSE_FILE: ${{ vars.DOCKER_COMPOSE_FILE }}
          BASE_PATH: ${{ secrets.BASE_PATH }}
        with:
          host: ${{ secrets.HOST_1 }}
          username: ${{ secrets.HOST_1_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: CI_REGISTRY,CI_REGISTRY_REPO,SERVICE_NAME,SERVICE_TAG,DOCKER_COMPOSE_FILE,BASE_PATH
          script: |
            for var in CI_REGISTRY CI_REGISTRY_REPO SERVICE_NAME SERVICE_TAG DOCKER_COMPOSE_FILE,BASE_PATH; do
              if [ -z "${!var}" ]; then
                echo "Error: Environment variable ${var} is not set."
                exit 1
              fi
            done

            IMAGE="${CI_REGISTRY}/${CI_REGISTRY_REPO}/${SERVICE_NAME}:${SERVICE_TAG}"

            update_docker_compose() {
              local image="$1"
              local compose_file="$2"
              sed -i "s|image: .*/${SERVICE_NAME}:.*|image: ${image}|" "${compose_file}"
            }
          
            cd "${BASE_PATH}/services" || exit 1
          
            update_docker_compose "${IMAGE}" "${DOCKER_COMPOSE_FILE}"

            cd "${BASE_PATH}" || exit 1

            docker compose down || true
            docker compose up --detach
